generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../main.db"
}

model client_side_program_api_keys {
  api_key_id               Int    @id @default(autoincrement())
  caa_user_id            String
  api_key_hashed_value     String
  api_key_is_active        Int
  api_key_time_generated   Int
  api_key_time_deactivated Int?
}

model logs {
  log_id        Int            @id @default(autoincrement())
  caa_user_id String
  org_id_fk     String?
  user_email_fk String?
  project_id_fk String?
  PRI_FACILITY  Int
  PRI_SEVERITY  Int
  VER           Int
  TIMESTAMP     String
  HOSTNAME      String
  APPNAME       String
  PROCID        String
  MSG           String
  projects      projects?      @relation(fields: [project_id_fk], references: [project_id], onDelete: NoAction, onUpdate: NoAction)
  users         users?         @relation(fields: [user_email_fk], references: [user_email], onDelete: NoAction, onUpdate: NoAction)
  organizations organizations? @relation(fields: [org_id_fk], references: [org_id], onDelete: NoAction, onUpdate: NoAction)
}

model organization_members {
  org_id_fk       String
  user_email_fk   String
  caa_user_id   String
  org_member_role String
  users           users         @relation(fields: [user_email_fk], references: [user_email], onDelete: NoAction, onUpdate: NoAction)
  organizations   organizations @relation(fields: [org_id_fk], references: [org_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([org_id_fk, user_email_fk])
}

model organizations {
  org_id                    String                 @id
  caa_user_id             String
  org_name                  String
  org_last_updated_on_caa Int
  logs                      logs[]
  organization_members      organization_members[]
  projects                  projects[]
}

model projects {
  project_id                    String         @id
  caa_user_id                 String
  org_id_fk                     String?
  project_name                  String
  project_is_pitr_enabled       Int
  project_last_updated_on_caa Int
  logs                          logs[]
  organizations                 organizations? @relation(fields: [org_id_fk], references: [org_id], onDelete: NoAction, onUpdate: NoAction)
  tables                        tables[]
}

model tables {
  project_id_fk               String
  caa_user_id               String
  table_name                  String
  table_is_rls_enabled        Int
  table_last_updated_on_caa Int
  projects                    projects @relation(fields: [project_id_fk], references: [project_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([project_id_fk, table_name])
}

model users {
  user_email                 String                 @id
  caa_user_id              String
  user_is_mfa_enabled        Int
  user_last_updated_on_caa Int
  logs                       logs[]
  organization_members       organization_members[]
}
